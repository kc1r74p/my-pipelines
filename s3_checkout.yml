resources:
- name: ingress_p1
  type: s3
  source:
    bucket: ingress
    regexp: GH01(.*).MP4
    initial_path: GH010000.MP4
    access_key_id: ((s3_access_id))
    secret_access_key: ((s3_access_key))
    endpoint: ((s3_host))
    cloudfront_url: ((s3_host))
    disable_ssl: true
    
- name: ingress_p2
  type: s3
  source:
    bucket: ingress
    regexp: GH02(.*).MP4
    initial_path: GH020000.MP4
    access_key_id: ((s3_access_id))
    secret_access_key: ((s3_access_key))
    endpoint: ((s3_host))
    cloudfront_url: ((s3_host))    
    disable_ssl: true

- name: ingress_p3
  type: s3
  source:
    bucket: ingress
    regexp: GH03(.*).MP4
    initial_path: GH030000.MP4
    access_key_id: ((s3_access_id))
    secret_access_key: ((s3_access_key))
    endpoint: ((s3_host))
    cloudfront_url: ((s3_host))
    disable_ssl: true
    
jobs:
- name: list_ingress
  plan:
  - in_parallel:  
    - get: ingress_p1
    - get: ingress_p2
    - get: ingress_p3
    - task: s3-list
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: alpine}
        run:
          path: sh
          args:
          - -exc
          - |
            apk add curl
            curl ((s3_host))
            ls -lha
            cd ..
            ls -lha
